---
- name: output subnet facts
  debug:
    msg: '{{ public_subnet_id_fact }}'

- name: Bastion host | Create bastionhost inbound rules.
  ec2_group:
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    region: '{{ region }}'
    description: 'bastion host inbound rules'
    name: 'bastion host name'
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: '{{ my_ip }}/32'
    vpc_id: '{{ vpc_id }}'
  register: bastionhost_inbound_results

- name: Bastion host | Tag bastionhost inbound traffic rules.
  ec2_tag:
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    region: '{{ region }}'
    resource: '{{ bastionhost_inbound_results.group_id }}'
    state: present
    tags:
      Name: 'docnow-bastionhost'

- name: Bastion host | Get subnet ID based on subnet variable
  ec2_vpc_subnet_facts:
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    region: '{{ region }}'
    filters:
      "tag:Name": "{{ vpc_id }}"
  register: vpc_subnet_facts

- name: Bastion host | Create bastionhost instance.
  ec2:
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    region: '{{ region }}'
    assign_public_ip: 'yes'
    image: '{{ image }}'
    instance_type: '{{ instance_type }}'
    keypair: '{{ keypair }}'
    source_dest_check: 'no'
    vpc_subnet_id: '{{ public_subnet_id_fact }}'
    wait: 'yes'
  register: bastionhost_instance_results

- name: Bastion host | Create bastionhost SSH inbound rules for internal
  ec2_group:
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    region: '{{ region }}'
    description: 'bastion SSH rules'
    name: 'ssh bastion inbound internal'
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: '{{ my_ip }}/32'
    vpc_id: '{{ vpc_id }}'
  register: bastionhost_inbound_internal_results

- name: output bastion public dns
  debug:
    msg: '{{ bastionhost_instance_results }}'
